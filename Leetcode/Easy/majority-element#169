Given an array nums of size n, return the majority element.

The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.
Input: nums = [3,2,3]
Output: 3

class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        return nums[n/2];
    }
}
TC-O(nlogn)
SC- O(1)

//Most Voting Algo 
class Solution {
    public int majorityElement(int[] nums) {
        int count =0;
        int candidate = 0;
        for(int i :nums){
            if(count==0){
                candidate = i;
            }
            if(candidate==i){
                count++;
            }
            else{
                 count--;
            }
        }
        return candidate;
    }
}

TC-O(n)
SC-O(1)
