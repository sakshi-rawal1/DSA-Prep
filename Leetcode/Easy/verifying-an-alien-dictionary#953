Input: words = ["hello","leetcode"], order = "hlabcdefgijkmnopqrstuvwxyz"
Output: true
Explanation: As 'h' comes before 'l' in this language, then the sequence is sorted.

class Solution {
    public boolean isAlienSorted(String[] words, String order){
        //Map to store the character and its corresponding index 
       HashMap<Character,Integer> map = new HashMap<>();
        for(int i = 0;i<order.length();i++){
            map.put(order.charAt(i),i);
        }
        
        //verify the sequence of each adjacent pair 
        for(int i=1; i<words.length;i++){
            String word1 = words[i-1];
            int l1 = word1.length();
            String word2 = words[i];
            int l2 = word2.length();
            
            //check if the each character is in order or not for the pair of words till min len of l1 and l2
            int j=0;
            for(;j<Math.min(l1,l2);j++){
                char c1 = word1.charAt(j);
                char c2 = word2.charAt(j);
                
                //check if the chars are different and order of c1>c2 so return false;
                if(c1!=c2){
                    if(map.get(c1)>map.get(c2))return false;
                    else break;
                }
            }
            
            //if all the chars are same till min of l1,l2 then if length of l1>l2 so return false
            if(j == Math.min(l1,l2)){
                if(l1>l2)return false;
            }
        }
      //everything is in order
        return true;    
        
    }
}
