Given an array, rotate the array to the right by k steps, where k is non-negative.

 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]

class Solution {
    public void rotate(int[] nums, int k) {
        if(nums.length ==  1) return;
        if(k>nums.length) k = k % nums.length;
        
        //Reverse first elements uptill nums.length-1-k 
        int j = nums.length-1-k;
        int i = 0;
        while(i<j){
         int temp = nums[i];
         nums[i] = nums[j];
         nums[j] = temp;
            i++;
            j--;
        }
        
        //Reverse elements from nums.length-k uptill nums.length -1
        i = nums.length-k;
        j = nums.length -1;
        while(i<j){
         int temp = nums[i];
         nums[i] = nums[j];
         nums[j] = temp;
            i++;
            j--;
        }
        
         //Reverse elements from 0 uptill nums.length -1
        i = 0;
        j = nums.length-1;
        while(i<j){
         int temp = nums[i];
         nums[i] = nums[j];
         nums[j] = temp;
            i++;
            j--;
        }
    }
}
