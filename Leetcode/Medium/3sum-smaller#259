Given an array of n integers nums and an integer target, find the number of index triplets i, j, k with 0 <= i < j < k < n 
that satisfy the condition nums[i] + nums[j] + nums[k] < target.

 

Example 1:

Input: nums = [-2,0,1,3], target = 2
Output: 2
Explanation: Because there are two triplets which sums are less than 2:
[-2,0,1]
[-2,0,3]

class Solution {
    public int threeSumSmaller(int[] nums, int target) {
        int count = 0;
        Arrays.sort(nums);
        for(int i = 0;i<nums.length-2;i++){
            int L = i+1;
            int H = nums.length -1;
            while(L<H){
                int sum = nums[i]+nums[L]+nums[H];
                if(sum<target){
                    count += H-L;
                    L++;
                }
                else{
                    H--;
                }
                
            }
        }
        return count;
    }
}
